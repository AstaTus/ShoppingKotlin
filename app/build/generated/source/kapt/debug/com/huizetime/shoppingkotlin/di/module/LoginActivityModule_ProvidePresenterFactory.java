// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.huizetime.shoppingkotlin.di.module;

import com.huizetime.shoppingkotlin.presenter.LoginPresenter;
import com.huizetime.shoppingkotlin.view.ILoginView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class LoginActivityModule_ProvidePresenterFactory implements Factory<LoginPresenter> {
  private final LoginActivityModule module;

  private final Provider<ILoginView> arg0Provider;

  public LoginActivityModule_ProvidePresenterFactory(
      LoginActivityModule module, Provider<ILoginView> arg0Provider) {
    assert module != null;
    this.module = module;
    assert arg0Provider != null;
    this.arg0Provider = arg0Provider;
  }

  @Override
  public LoginPresenter get() {
    return Preconditions.checkNotNull(
        module.providePresenter(arg0Provider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<LoginPresenter> create(
      LoginActivityModule module, Provider<ILoginView> arg0Provider) {
    return new LoginActivityModule_ProvidePresenterFactory(module, arg0Provider);
  }
}
